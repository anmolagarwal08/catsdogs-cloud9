# This is a basic workflow to help you get started with Actions

name: CI build for docker image to push to ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Login - ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env: 
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_SESSION_TOKEN: ${{secrets.AWS_SESSION_TOKEN}}
          AWS_REGION: us-east-1
          
      - name: image to ECR
        env: 
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: assignment1
          IMAGE_TAG: cats_v1
        run: |
          cd cats/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker run -d -p 8080:80 --name cats $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps
          sleep 15
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: image to ECR
        env: 
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: assignment1
          IMAGE_TAG: dogs_v1
        
        run: |
          cd dogs/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker run -d -p 8081:80 --name dogs $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker ps
          sleep 15
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  
